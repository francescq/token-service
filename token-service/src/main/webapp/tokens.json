{
    "apiVersion": "1.3",
	"swaggerVersion": "1.1",
	"basePath": "https://my.workshare.com/api/v1.3",
	"resourcePath": "/tokens.{format}",
	"apis": [
	{
		"path":"/tokens.{format}",
		"description":"Creates a token",
		"operations":[
				{
					"httpMethod":"POST",
					"nickname":"createToken",
					"responseClass":"Token",
					"parameters":[
							{
								"paramType": "form",
								"name": "content",
								"description": "Arbitrary content as a string",
								"dataType": "string",
								"required": false,
								"allowMultiple": false
							},{
								"paramType": "form",
								"name": "type",
								"description": "Type of the generated token. It's just meta information dealed by the client",
								"dataType": "string",
								"required": false,
								"allowMultiple": false
							},{
								"paramType": "form",
								"name": "date_expiry",
								"description": "Timestamp when this token is no longer available",
								"dataType": "Date",
								"required": false,
								"allowMultiple": false
							}
						],
					"summary":"Creates a token with the specified content",
					"notes": "",
					"errorResponses":[{
							"code": 401,
							"reason": "The user could not be authenticated (wrong or no session id)"
					}]
				},
				{
					"httpMethod":"GET",
					"nickname":"getToken",
					"responseClass":"Token",
					"parameters":[{
						"paramType": "form",
						"name": "id",
						"description": "Token id to get",
						"dataType": "string",
						"required": true,
						"allowMultiple": false
					}
						],
					"summary":"Creates a token with the specified content",
					"notes": "User/Session must be the token creator",
					"errorResponses":[{
							"code": 401,
							"reason": "The user could not be authenticated (wrong or no session id)"
					}]
				},
				{
					"httpMethod":"PUT",
					"nickname":"updateToken",
					"responseClass":"Token",
					"parameters":[{
								"paramType": "form",
								"name": "content",
								"description": "Arbitrary content as a string",
								"dataType": "string",
								"required": false,
								"allowMultiple": false
							},{
								"paramType": "form",
								"name": "type",
								"description": "Type of the generated token. It's just meta information dealed by the client",
								"dataType": "string",
								"required": false,
								"allowMultiple": false
							},{
								"paramType": "form",
								"name": "date_expiry",
								"description": "Timestamp when this token is no longer available",
								"dataType": "Date",
								"required": false,
								"allowMultiple": false
							}],
					"summary":"Updates a token with the specified data",
					"notes": "User/Session must be the token creator",
					"errorResponses":[{
							"code": 401,
							"reason": "The user could not be authenticated (wrong or no session id)"
					}]
				},
				{
					"httpMethod":"DELETE",
					"nickname":"updateToken",
					"responseClass":"Token",
					"parameters":[
                        {
						"paramType": "form",
						"name": "id",
						"description": "Token identifier to delete",
						"dataType": "string",
						"required": true,
						"allowMultiple": false
                        }
						],
					"summary":"Deletes a token with the specified id",
					"notes": "User/Session must be the token creator",
					"errorResponses":[{
							"code": 401,
							"reason": "The user could not be authenticated (wrong or no session id)"
					}]
				}				
			]
	}
	],
	"models": {
		"Token": {
			"properties": {
				"id" : { "type" : "string", "required": true, "description" : "unique token identifier" },
				"content" : {"type" : "string", "required": true, "description" : "token itself. Populated by the client" },
				"date_expiry" : {"type" : "Date", "required": true, "description" : "When token will die. If the client doesn't specify it a further date will be set as timeout"},
				"type" : {"type" : "string", "required": false, "description" : "One word token description. Handled by the client"},
				"create_date" : {"type" : "Date", "required": true, "description" : "Creation date"},
				"create_user" : {"type" : "string", "required" : false, "description" : "User unique identifier. Just for log purposes."},
				"update_date" : {"type" : "Date", "required": false, "description" : "Update date"},
				"update_user" : {"type" : "string", "required" : false, "description" : "User unique identifier. Just for log purposes."}
			}
		}
	}
}