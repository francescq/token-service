{
    "apiVersion": "1.0",
	"swaggerVersion": "1.1",
    "basePath":"http://localhost:1234/1.0",
	"resourcePath": "/tokens",
	"apis": [
	     	{
	    		"path":"/tokens.{format}",
	    		"description":"Manages the token collection",
	    		"operations":[
	    				{
	    					"httpMethod":"POST",
	    					"nickname":"createToken",
	    					"responseClass":"Token",
	    					"parameters":[
	    							{
	    								"paramType": "form",
	    								"name": "content",
	    								"description": "Arbitrary content as a string",
	    								"dataType": "string",
	    								"required": false,
	    								"allowMultiple": false
	    							},{
	    								"paramType": "form",
	    								"name": "type",
	    								"description": "Type of the generated token. It's just meta information dealed by the client",
	    								"dataType": "string",
	    								"required": false,
	    								"allowMultiple": false
	    							},{
	    								"paramType": "form",
	    								"name": "expires_at",
	    								"description": "Timestamp when this token is no longer available",
	    								"dataType": "Date",
	    								"required": false,
	    								"allowMultiple": false
	    							}
	    						],
	    					"summary":"Creates a token with the specified content",
	    					"notes": "",
	    					"errorResponses":[{
	    							"code": 401,
	    							"reason": "The user could not be authenticated (wrong or no session id)"
	    					}]
	    				}
	    			]
	    	},
			{
				"path":"/tokens/{id}.{format}",
				"description":"Manages a token",
				"operations":[
				{
					"httpMethod":"GET",
					"nickname":"getToken",
					"responseClass":"Token",
					"parameters":[{
						"paramType": "path",
						"name": "id",
						"description": "id of the token to get",
						"dataType": "string",
						"required": true,
						"allowMultiple": false
					}
						],
					"summary":"Creates a token with the specified content",
					"notes": "User/Session must be the token creator",
					"errorResponses":[{
							"code": 401,
							"reason": "The user could not be authenticated (wrong or no session id)"
					}]
				},
				{
					"httpMethod":"DELETE",
					"nickname":"updateToken",
					"responseClass":"Token",
					"parameters":[
                        {
						"paramType": "path",
						"name": "id",
						"description": "id of the token to delete",
						"dataType": "string",
						"required": true,
						"allowMultiple": false
                        }
						],
					"summary":"Deletes a token with the specified id",
					"notes": "User/Session must be the token creator",
					"errorResponses":[{
							"code": 401,
							"reason": "The user could not be authenticated (wrong or no session id)"
					}]
				}				
			]
	}
	],
	"models": {
		"Token": {
			"properties": {
				"id" : { "type" : "string", "required": true, "description" : "unique token identifier" },
				"content" : {"type" : "string", "required": true, "description" : "token itself. Populated by the client" },
				"expires_at" : {"type" : "Date", "required": true, "description" : "When token will die. If the client doesn't specify it a further date will be set as timeout"} ,
				"type" : {"type" : "string", "required": false, "description" : "One word token description. Handled by the client"},
				"created_at" : {"type" : "Date", "required": true, "description" : "Creation date"},
				"created_by" : {"type" : "string", "required" : false, "description" : "User unique identifier. Just for log purposes."},
				"updated_at" : {"type" : "Date", "required": false, "description" : "Update date"},
				"updated_by" : {"type" : "string", "required" : false, "description" : "User unique identifier. Just for log purposes."}
			},
			"id": "Token"
		}
	}
}
